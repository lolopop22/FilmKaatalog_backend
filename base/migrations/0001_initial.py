# Generated by Django 4.0.2 on 2022-02-13 08:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('runtime', models.CharField(max_length=10)),
                ('synopsis', models.TextField(blank=True)),
                ('poster', models.TextField(blank=True)),
                ('cast', models.ManyToManyField(blank=True, related_name='cast', to='base.Cast')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='films', to='base.catalog')),
                ('directors', models.ManyToManyField(blank=True, related_name='directors', to='base.Director')),
                ('producers', models.ManyToManyField(blank=True, related_name='producers', to='base.Producer')),
            ],
        ),
    ]
